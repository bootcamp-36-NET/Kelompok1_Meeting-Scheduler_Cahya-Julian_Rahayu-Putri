#pragma checksum "D:\FileKerja\MII\ProjectNetCore\Kelompok1_Meeting-Scheduler_Cahya-Julian_Rahayu-Putri\API\Client\Views\Dashboard\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "76c123c8912c4b278d8a03e2a487e84c773c56b9"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Dashboard_Index), @"mvc.1.0.view", @"/Views/Dashboard/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Dashboard/Index.cshtml", typeof(AspNetCore.Views_Dashboard_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\FileKerja\MII\ProjectNetCore\Kelompok1_Meeting-Scheduler_Cahya-Julian_Rahayu-Putri\API\Client\Views\_ViewImports.cshtml"
using Client;

#line default
#line hidden
#line 2 "D:\FileKerja\MII\ProjectNetCore\Kelompok1_Meeting-Scheduler_Cahya-Julian_Rahayu-Putri\API\Client\Views\_ViewImports.cshtml"
using Client.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"76c123c8912c4b278d8a03e2a487e84c773c56b9", @"/Views/Dashboard/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3332004e6f18ccbec22253d7e177fe1fd5f40969", @"/Views/_ViewImports.cshtml")]
    public class Views_Dashboard_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "D:\FileKerja\MII\ProjectNetCore\Kelompok1_Meeting-Scheduler_Cahya-Julian_Rahayu-Putri\API\Client\Views\Dashboard\Index.cshtml"
  
    ViewData["Title"] = "Rekap Booking";
    Layout = "~/Views/Layout/Layout.cshtml";

#line default
#line hidden
            BeginContext(97, 106, true);
            WriteLiteral("\r\n<!-- Content Row -->\r\n<div class=\"card-header py-3\">\r\n    <h6 class=\"m-0 font-weight-bold text-primary\">");
            EndContext();
            BeginContext(204, 13, false);
#line 9 "D:\FileKerja\MII\ProjectNetCore\Kelompok1_Meeting-Scheduler_Cahya-Julian_Rahayu-Putri\API\Client\Views\Dashboard\Index.cshtml"
                                             Write(ViewBag.Title);

#line default
#line hidden
            EndContext();
            BeginContext(217, 224, true);
            WriteLiteral("</h6>\r\n</div>\r\n\r\n<div class=\"card-body\">\r\n    <div class=\"table-responsive\">\r\n        <table class=\"table table-bordered\" id=\"MydataTable\" width=\"100%\" cellspacing=\"0\"></table>\r\n    </div>\r\n</div>\r\n\r\n\r\n<!-- Content Row -->\r\n");
            EndContext();
            DefineSection("scriptdbAdmin", async() => {
                BeginContext(464, 3723, true);
                WriteLiteral(@"
    <script>
        var tableRoom = {
            create: function () {
                //debugger;
                // jika table tersebut datatable, maka clear and dostroy
                if ($.fn.DataTable.isDataTable('#MydataTable')) {
                    // table yg sudah dibentuk menjadi datatable harus d rebuild lagi
                    // untuk di instantiasi ulang
                    $('#MydataTable').DataTable().clear();
                    $('#MydataTable').DataTable().destroy();
                }
                $.ajax({
                    url: '/RoomWeb/LoadRoomEmp',
                    method: 'get',
                    contentType: 'application/json',
                    success: function (res, status, xhr) {
                        //debugger;
                        if (xhr.status == 200 || xhr.status == 201) {
                            $('#MydataTable').DataTable({
                                data: res,
                                ""columnDefs"": [
           ");
                WriteLiteral(@"                         { ""orderable"": false, ""targets"": 2 }
                                ],
                                columns: [
                                    {
                                        title: ""No."", data: """", render: function (data, type, row, meta) {
                                            return meta.row + meta.settings._iDisplayStart + 1;
                                        }
                                    },
                                    // { title: ""Booking Id"", data: ""BookingId"" },
                                    { title: ""Room Booked"", data: ""RoomName"" },
                                    //{ title: ""Team Leader"", data: ""TeamLeader"" },
                                    {
                                        title: ""Create Date"", data: ""CreateDate"",
                                        render: function (jsonDate) {
                                            var date = moment(jsonDate).format(""DD MMMM YYYY"");
              ");
                WriteLiteral(@"                              return date;
                                        }},
                                    { title: ""Event"", data: ""BookingName"" },
                                    { title: ""Time"", data: ""Time"" },
                                    {
                                        title: ""End Date"", data: ""EndDate"",
                                        render: function (jsonDate) {
                                            var date = moment(jsonDate).format(""DD MMMM YYYY"");
                                            return date;
                                        }
                                    },
                                    //{
                                    //    title: ""Action"", data: null, ""sortable"": false, render: function (data, type, row) {
                                    //        return ""<button class='btn btn-outline-warning' title='Edit' onclick=formRoom.setEditData('"" + data.Id + ""')><i class='fa fa-lg fa-edit'></i></butt");
                WriteLiteral(@"on>"" +
                                    //            ""<button class='btn btn-outline-danger' title='Delete' onclick=formRoom.setDeleteData('"" + data.Id + ""')><i class='fa fa-lg fa-trash'></i></button>""
                                    //    }
                                    //}
                                ]
                            });
                        } else {
                        }
                    },
                    erorrr: function (err) {
                        console.log(err);
                    }
                });
            }
        };
        tableRoom.create();
    </script>
");
                EndContext();
            }
            );
            BeginContext(4190, 2, true);
            WriteLiteral("\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
